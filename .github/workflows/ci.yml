name: CI - Build & Publish Docker

permissions:
  contents: read
  packages: write
  id-token: write

on:
  push:
    branches: ["main", "master"]
  pull_request:
    branches: ["main", "master"]
  workflow_dispatch: {}

env:
  IMAGE_NAME: ${{ github.repository_owner }}/notification-node

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm ci

      - name: Run tests (if any)
        run: |
          if jq -e '.scripts.test' package.json >/dev/null 2>&1; then
            npm test || true
          fi

      - name: Build Docker image
        run: |
          docker build -f Dockerfile -t ghcr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} -t ghcr.io/${{ env.IMAGE_NAME }}:latest .

  push:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ghcr.io/${{ env.IMAGE_NAME }}:latest

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Setup Docker caching
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: Build and push Docker image with Buildx (Optional cache support)
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ghcr.io/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64