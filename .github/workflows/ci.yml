# CI: build da imagem Docker e push para GitHub Container Registry (GHCR)
# - Sem deploy automático (CD) para simplificar PoC.
# - Usa GITHUB_TOKEN embutido para autenticar no GHCR durante o push.
name: CI - Build & Publish Docker

permissions:
  contents: read
  packages: write
  id-token: write

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch: {}

env:
  IMAGE_NAME: ${{ github.repository_owner }}/notification-node

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # 1) Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2) Setup Node (opcional, para steps que executem npm)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      # 3) Install dependencies (reprodutível)
      - name: Install dependencies
        run: npm ci

      # 4) Optional: run tests if defined (does not fail workflow if none)
      - name: Run tests (if any)
        run: |
          if jq -e '.scripts.test' package.json >/dev/null 2>&1; then
            npm test || true
          fi

      # 5) Login no GHCR usando GITHUB_TOKEN (built-in)
      - name: Log in to GitHub Container Registry (ghcr.io)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 6) Build e push da imagem Docker
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ghcr.io/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output image reference
        run: echo "Image pushed: ghcr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}"